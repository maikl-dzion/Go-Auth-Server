// Code generated by protoc-gen-go. DO NOT EDIT.
// source: endpoint.proto

package endpoint

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthRequest struct {
	Params               *EndpointParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetParams() *EndpointParams {
	if m != nil {
		return m.Params
	}
	return nil
}

type AuthResponse struct {
	Params               *EndpointParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	Uuid                 string          `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{1}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetParams() *EndpointParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *AuthResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type EndpointParams struct {
	Account              int32    `protobuf:"varint,1,opt,name=account,proto3" json:"account,omitempty"`
	AuthType             int32    `protobuf:"varint,2,opt,name=authType,proto3" json:"authType,omitempty"`
	Timestamp            int64    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Rnd                  []byte   `protobuf:"bytes,4,opt,name=rnd,proto3" json:"rnd,omitempty"`
	Hash                 []byte   `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Cost                 int32    `protobuf:"varint,6,opt,name=cost,proto3" json:"cost,omitempty"`
	Chid                 int32    `protobuf:"varint,7,opt,name=chid,proto3" json:"chid,omitempty"`
	Hellointerval        int32    `protobuf:"varint,8,opt,name=hellointerval,proto3" json:"hellointerval,omitempty"`
	Hellolimit           int32    `protobuf:"varint,9,opt,name=hellolimit,proto3" json:"hellolimit,omitempty"`
	Acktimeout           int32    `protobuf:"varint,10,opt,name=acktimeout,proto3" json:"acktimeout,omitempty"`
	RemoteAddr           int32    `protobuf:"varint,11,opt,name=remoteAddr,proto3" json:"remoteAddr,omitempty"`
	RemotePort           int32    `protobuf:"varint,12,opt,name=remotePort,proto3" json:"remotePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndpointParams) Reset()         { *m = EndpointParams{} }
func (m *EndpointParams) String() string { return proto.CompactTextString(m) }
func (*EndpointParams) ProtoMessage()    {}
func (*EndpointParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{2}
}

func (m *EndpointParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndpointParams.Unmarshal(m, b)
}
func (m *EndpointParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndpointParams.Marshal(b, m, deterministic)
}
func (m *EndpointParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndpointParams.Merge(m, src)
}
func (m *EndpointParams) XXX_Size() int {
	return xxx_messageInfo_EndpointParams.Size(m)
}
func (m *EndpointParams) XXX_DiscardUnknown() {
	xxx_messageInfo_EndpointParams.DiscardUnknown(m)
}

var xxx_messageInfo_EndpointParams proto.InternalMessageInfo

func (m *EndpointParams) GetAccount() int32 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *EndpointParams) GetAuthType() int32 {
	if m != nil {
		return m.AuthType
	}
	return 0
}

func (m *EndpointParams) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *EndpointParams) GetRnd() []byte {
	if m != nil {
		return m.Rnd
	}
	return nil
}

func (m *EndpointParams) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *EndpointParams) GetCost() int32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *EndpointParams) GetChid() int32 {
	if m != nil {
		return m.Chid
	}
	return 0
}

func (m *EndpointParams) GetHellointerval() int32 {
	if m != nil {
		return m.Hellointerval
	}
	return 0
}

func (m *EndpointParams) GetHellolimit() int32 {
	if m != nil {
		return m.Hellolimit
	}
	return 0
}

func (m *EndpointParams) GetAcktimeout() int32 {
	if m != nil {
		return m.Acktimeout
	}
	return 0
}

func (m *EndpointParams) GetRemoteAddr() int32 {
	if m != nil {
		return m.RemoteAddr
	}
	return 0
}

func (m *EndpointParams) GetRemotePort() int32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

type SessionRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Open                 bool     `protobuf:"varint,2,opt,name=open,proto3" json:"open,omitempty"`
	Close                bool     `protobuf:"varint,3,opt,name=close,proto3" json:"close,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRequest) Reset()         { *m = SessionRequest{} }
func (m *SessionRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequest) ProtoMessage()    {}
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{3}
}

func (m *SessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest.Unmarshal(m, b)
}
func (m *SessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest.Merge(m, src)
}
func (m *SessionRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequest.Size(m)
}
func (m *SessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest proto.InternalMessageInfo

func (m *SessionRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SessionRequest) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

func (m *SessionRequest) GetClose() bool {
	if m != nil {
		return m.Close
	}
	return false
}

type SessionResponse struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse) Reset()         { *m = SessionResponse{} }
func (m *SessionResponse) String() string { return proto.CompactTextString(m) }
func (*SessionResponse) ProtoMessage()    {}
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{4}
}

func (m *SessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse.Unmarshal(m, b)
}
func (m *SessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse.Marshal(b, m, deterministic)
}
func (m *SessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse.Merge(m, src)
}
func (m *SessionResponse) XXX_Size() int {
	return xxx_messageInfo_SessionResponse.Size(m)
}
func (m *SessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse proto.InternalMessageInfo

func (m *SessionResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type AuthUserRequest struct {
	SrvUuid              string   `protobuf:"bytes,1,opt,name=srvUuid,proto3" json:"srvUuid,omitempty"`
	Login                string   `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthUserRequest) Reset()         { *m = AuthUserRequest{} }
func (m *AuthUserRequest) String() string { return proto.CompactTextString(m) }
func (*AuthUserRequest) ProtoMessage()    {}
func (*AuthUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{5}
}

func (m *AuthUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthUserRequest.Unmarshal(m, b)
}
func (m *AuthUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthUserRequest.Marshal(b, m, deterministic)
}
func (m *AuthUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthUserRequest.Merge(m, src)
}
func (m *AuthUserRequest) XXX_Size() int {
	return xxx_messageInfo_AuthUserRequest.Size(m)
}
func (m *AuthUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthUserRequest proto.InternalMessageInfo

func (m *AuthUserRequest) GetSrvUuid() string {
	if m != nil {
		return m.SrvUuid
	}
	return ""
}

func (m *AuthUserRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *AuthUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthUserResponse struct {
	SrvUuid              string   `protobuf:"bytes,1,opt,name=srvUuid,proto3" json:"srvUuid,omitempty"`
	UserUuid             string   `protobuf:"bytes,2,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	Login                string   `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	Open                 bool     `protobuf:"varint,4,opt,name=open,proto3" json:"open,omitempty"`
	Close                bool     `protobuf:"varint,5,opt,name=close,proto3" json:"close,omitempty"`
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthUserResponse) Reset()         { *m = AuthUserResponse{} }
func (m *AuthUserResponse) String() string { return proto.CompactTextString(m) }
func (*AuthUserResponse) ProtoMessage()    {}
func (*AuthUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e90a83b3c7ac16f6, []int{6}
}

func (m *AuthUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthUserResponse.Unmarshal(m, b)
}
func (m *AuthUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthUserResponse.Marshal(b, m, deterministic)
}
func (m *AuthUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthUserResponse.Merge(m, src)
}
func (m *AuthUserResponse) XXX_Size() int {
	return xxx_messageInfo_AuthUserResponse.Size(m)
}
func (m *AuthUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthUserResponse proto.InternalMessageInfo

func (m *AuthUserResponse) GetSrvUuid() string {
	if m != nil {
		return m.SrvUuid
	}
	return ""
}

func (m *AuthUserResponse) GetUserUuid() string {
	if m != nil {
		return m.UserUuid
	}
	return ""
}

func (m *AuthUserResponse) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *AuthUserResponse) GetOpen() bool {
	if m != nil {
		return m.Open
	}
	return false
}

func (m *AuthUserResponse) GetClose() bool {
	if m != nil {
		return m.Close
	}
	return false
}

func (m *AuthUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "AuthResponse")
	proto.RegisterType((*EndpointParams)(nil), "EndpointParams")
	proto.RegisterType((*SessionRequest)(nil), "SessionRequest")
	proto.RegisterType((*SessionResponse)(nil), "SessionResponse")
	proto.RegisterType((*AuthUserRequest)(nil), "AuthUserRequest")
	proto.RegisterType((*AuthUserResponse)(nil), "AuthUserResponse")
}

func init() { proto.RegisterFile("endpoint.proto", fileDescriptor_e90a83b3c7ac16f6) }

var fileDescriptor_e90a83b3c7ac16f6 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4f, 0x8f, 0xd3, 0x3e,
	0x10, 0xdd, 0x6c, 0xff, 0x4f, 0xbb, 0x6d, 0x7f, 0xfe, 0x71, 0xb0, 0x2a, 0x84, 0xaa, 0x08, 0x44,
	0x2f, 0xe4, 0x50, 0xd0, 0x4a, 0x1c, 0x8b, 0xd4, 0x13, 0x12, 0xaa, 0x0c, 0x3d, 0x72, 0x30, 0xb1,
	0xd5, 0x58, 0x9b, 0xd8, 0xc1, 0x76, 0x16, 0x71, 0xe7, 0x93, 0xc0, 0x97, 0xe2, 0xe3, 0x20, 0x3b,
	0x7f, 0x5b, 0x2d, 0xd2, 0x8a, 0xdb, 0xcc, 0x9b, 0xc9, 0xbc, 0xd1, 0x7b, 0xe3, 0xc0, 0x9c, 0x4b,
	0x96, 0x2b, 0x21, 0x6d, 0x94, 0x6b, 0x65, 0x55, 0x78, 0x0b, 0xd3, 0x5d, 0x61, 0x13, 0xc2, 0xbf,
	0x16, 0xdc, 0x58, 0xf4, 0x12, 0x86, 0x39, 0xd5, 0x34, 0x33, 0x38, 0x58, 0x07, 0x9b, 0xe9, 0x76,
	0x11, 0xed, 0xab, 0xfe, 0x83, 0x87, 0x49, 0x55, 0x0e, 0xdf, 0xc3, 0xac, 0xfc, 0xce, 0xe4, 0x4a,
	0x1a, 0xfe, 0xe8, 0x0f, 0x11, 0x82, 0x7e, 0x51, 0x08, 0x86, 0xaf, 0xd7, 0xc1, 0x66, 0x42, 0x7c,
	0x1c, 0xfe, 0xbe, 0x86, 0xf9, 0x79, 0x3b, 0xc2, 0x30, 0xa2, 0x71, 0xac, 0x0a, 0x69, 0xfd, 0xc0,
	0x01, 0xa9, 0x53, 0xb4, 0x82, 0x31, 0x2d, 0x6c, 0xf2, 0xe9, 0x7b, 0xce, 0xfd, 0x90, 0x01, 0x69,
	0x72, 0xf4, 0x14, 0x26, 0x56, 0x64, 0xdc, 0x58, 0x9a, 0xe5, 0xb8, 0xb7, 0x0e, 0x36, 0x3d, 0xd2,
	0x02, 0x68, 0x09, 0x3d, 0x2d, 0x19, 0xee, 0xaf, 0x83, 0xcd, 0x8c, 0xb8, 0xd0, 0x2d, 0x93, 0x50,
	0x93, 0xe0, 0x81, 0x87, 0x7c, 0xec, 0xb0, 0x58, 0x19, 0x8b, 0x87, 0x7e, 0xb6, 0x8f, 0x3d, 0x96,
	0x08, 0x86, 0x47, 0x15, 0x96, 0x08, 0x86, 0x9e, 0xc3, 0x4d, 0xc2, 0xd3, 0xd4, 0xed, 0xcc, 0xf5,
	0x3d, 0x4d, 0xf1, 0xd8, 0x17, 0xcf, 0x41, 0xf4, 0x0c, 0xc0, 0x03, 0xa9, 0xc8, 0x84, 0xc5, 0x13,
	0xdf, 0xd2, 0x41, 0x5c, 0x9d, 0xc6, 0x77, 0x6e, 0x47, 0x55, 0x58, 0x0c, 0x65, 0xbd, 0x45, 0x5c,
	0x5d, 0xf3, 0x4c, 0x59, 0xbe, 0x63, 0x4c, 0xe3, 0x69, 0x59, 0x6f, 0x91, 0xb6, 0x7e, 0x50, 0xda,
	0xe2, 0x59, 0xb7, 0xee, 0x90, 0xf0, 0x03, 0xcc, 0x3f, 0x72, 0x63, 0x84, 0x92, 0xb5, 0xc5, 0xb5,
	0x01, 0x41, 0x6b, 0x80, 0xc3, 0x54, 0xce, 0xa5, 0xd7, 0x73, 0x4c, 0x7c, 0x8c, 0x9e, 0xc0, 0x20,
	0x4e, 0x95, 0xe1, 0x5e, 0xc7, 0x31, 0x29, 0x93, 0xf0, 0x05, 0x2c, 0x9a, 0x79, 0x95, 0xf5, 0x0f,
	0x0c, 0x0c, 0x3f, 0xc3, 0xc2, 0x9d, 0xc7, 0xd1, 0x70, 0x5d, 0xf3, 0x62, 0x18, 0x19, 0x7d, 0x7f,
	0x6c, 0x3b, 0xeb, 0xd4, 0x31, 0xa5, 0xea, 0x24, 0x64, 0x75, 0x13, 0x65, 0xe2, 0x7c, 0xce, 0xa9,
	0x31, 0xdf, 0x94, 0x66, 0x7e, 0x85, 0x09, 0x69, 0xf2, 0xf0, 0x67, 0x00, 0xcb, 0x76, 0x7e, 0xb5,
	0xc7, 0xdf, 0x09, 0x56, 0x30, 0x2e, 0x0c, 0xd7, 0xc7, 0xf6, 0xee, 0x9a, 0xbc, 0x25, 0xef, 0x75,
	0xc9, 0x6b, 0x41, 0xfa, 0x0f, 0x09, 0x32, 0xe8, 0x08, 0xe2, 0x58, 0x33, 0x6e, 0x0c, 0x3d, 0x71,
	0x7f, 0x31, 0x13, 0x52, 0xa7, 0xdb, 0x5f, 0x01, 0xf4, 0xf7, 0xec, 0xc4, 0xd1, 0xab, 0xf2, 0xad,
	0xd4, 0x17, 0x8e, 0x66, 0x51, 0xe7, 0xc9, 0xad, 0x6e, 0xa2, 0xee, 0x43, 0x0a, 0xaf, 0xd0, 0x6d,
	0x23, 0xf1, 0x5e, 0xb2, 0x83, 0xff, 0x62, 0x11, 0x9d, 0x9b, 0xb8, 0x5a, 0x46, 0x17, 0x2e, 0x84,
	0x57, 0xe8, 0x0d, 0xfc, 0xef, 0x26, 0xbd, 0xa3, 0xf1, 0x1d, 0x97, 0xec, 0x91, 0x6c, 0xdb, 0x1f,
	0x01, 0xf4, 0x9d, 0x8c, 0xe8, 0x6d, 0x2b, 0x69, 0xc3, 0xbb, 0x8c, 0x2e, 0x5c, 0x5c, 0xfd, 0x17,
	0x5d, 0xea, 0x1e, 0x5e, 0xa1, 0x1d, 0x60, 0xc2, 0x4f, 0xc2, 0x58, 0x4d, 0xad, 0x50, 0xf2, 0x1f,
	0x46, 0x7c, 0x19, 0xfa, 0xdf, 0xd1, 0xeb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xa5, 0x93,
	0x91, 0xa0, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EdgeClient is the client API for Edge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EdgeClient interface {
	AuthEndpoint(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	SessionEndPoint(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*SessionResponse, error)
	AuthBackendEndpoint(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
}

type edgeClient struct {
	cc *grpc.ClientConn
}

func NewEdgeClient(cc *grpc.ClientConn) EdgeClient {
	return &edgeClient{cc}
}

func (c *edgeClient) AuthEndpoint(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/Edge/AuthEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *edgeClient) SessionEndPoint(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*SessionResponse, error) {
	out := new(SessionResponse)
	err := c.cc.Invoke(ctx, "/Edge/SessionEndPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *edgeClient) AuthBackendEndpoint(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/Edge/AuthBackendEndpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EdgeServer is the server API for Edge service.
type EdgeServer interface {
	AuthEndpoint(context.Context, *AuthRequest) (*AuthResponse, error)
	SessionEndPoint(context.Context, *SessionRequest) (*SessionResponse, error)
	AuthBackendEndpoint(context.Context, *AuthRequest) (*AuthResponse, error)
}

func RegisterEdgeServer(s *grpc.Server, srv EdgeServer) {
	s.RegisterService(&_Edge_serviceDesc, srv)
}

func _Edge_AuthEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeServer).AuthEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Edge/AuthEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeServer).AuthEndpoint(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Edge_SessionEndPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeServer).SessionEndPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Edge/SessionEndPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeServer).SessionEndPoint(ctx, req.(*SessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Edge_AuthBackendEndpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EdgeServer).AuthBackendEndpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Edge/AuthBackendEndpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EdgeServer).AuthBackendEndpoint(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Edge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Edge",
	HandlerType: (*EdgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthEndpoint",
			Handler:    _Edge_AuthEndpoint_Handler,
		},
		{
			MethodName: "SessionEndPoint",
			Handler:    _Edge_SessionEndPoint_Handler,
		},
		{
			MethodName: "AuthBackendEndpoint",
			Handler:    _Edge_AuthBackendEndpoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "endpoint.proto",
}

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	AuthUserEndPoint(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error)
	RegistrationUserEndPoint(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) AuthUserEndPoint(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error) {
	out := new(AuthUserResponse)
	err := c.cc.Invoke(ctx, "/User/AuthUserEndPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) RegistrationUserEndPoint(ctx context.Context, in *AuthUserRequest, opts ...grpc.CallOption) (*AuthUserResponse, error) {
	out := new(AuthUserResponse)
	err := c.cc.Invoke(ctx, "/User/RegistrationUserEndPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	AuthUserEndPoint(context.Context, *AuthUserRequest) (*AuthUserResponse, error)
	RegistrationUserEndPoint(context.Context, *AuthUserRequest) (*AuthUserResponse, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_AuthUserEndPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).AuthUserEndPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/AuthUserEndPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).AuthUserEndPoint(ctx, req.(*AuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_RegistrationUserEndPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).RegistrationUserEndPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/RegistrationUserEndPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).RegistrationUserEndPoint(ctx, req.(*AuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthUserEndPoint",
			Handler:    _User_AuthUserEndPoint_Handler,
		},
		{
			MethodName: "RegistrationUserEndPoint",
			Handler:    _User_RegistrationUserEndPoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "endpoint.proto",
}
